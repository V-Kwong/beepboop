{"version":3,"sources":["logger.ts","HistoryTableHeader.tsx","HabitHistory.tsx","DailyHistory.tsx","lofi-pomodoro-50min.mp3","UserHistory.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["logger","setLevel","HistoryTableHeader","props","context","useContext","AppContext","className","onClick","window","open","title","dates","map","day","format","toString","md","require","Habit","historyMap","Map","habit","text","history","debug","record","taskDate","dayjs","date","DATE_KEY_FORMAT","JSON","stringify","undefined","scoredUp","scoredDown","set","dailyScores","score","get","filter","length","showNoHistory","dangerouslySetInnerHTML","__html","render","HabitScore","up","down","Date","colour","join","DailyHistory","useState","setShowNoHistory","toggleNumDaysToShow","data","daily","type","id","Daily","streak","i","delta","value","taskUpdateTime","cronIntervals","search","unix","oneDayAgo","subtract","has","warn","console","groupEnd","dailyDeltas","DailyStatus","symbol","classNames","symbolNames","push","audioList1","name","musicSrc","HABITICA_API_URL","CLIENT_KEY","TASKS_PATH","getWindowDimensions","width","innerWidth","height","innerHeight","setRandConfettiNum","min","max","Math","ceil","floor","random","FIFTY_MIN","fancyTimeFormat","duration","hrs","mins","secs","ret","React","createContext","showTaskIcons","Array","IntervalTree","UserHistory","windowDimensions","setWindowDimensions","showConfetti","setShowConfetti","numberOfPieces","setNumberOfPieces","currentTime","play","audio","setAudio","isLoadingUserData","setLoadingUserData","isLoadingTaskData","setLoadingTaskData","isLoadingTodoData","setLoadingTodoData","numDaysToShow","setNumDaysToShow","cronTimes","setCronTimes","habits","setHabits","dailys","setDailys","setTodos","inPomodoroSession","setInPomodoroSession","pomodoroTimer","setPomodoroTimer","pomodoroTimerRef","useRef","current","showDialog","setShowDialog","handleCloseDialog","userId","userApiKey","fetchWithApiKey","url","fetch","method","headers","handleApiError","res","success","Error","message","setError","readData","then","json","result","task","log","error","scoreTask","taskId","audioOptions","getAudioInstance","audioLists","defaultPlayIndex","bounds","defaultPosition","top","left","remove","autoPlay","toggleMode","showMiniModeCover","showMiniProcessBar","seeked","showProgressLoadBar","showPlay","showReload","showDownload","showPlayMode","showThemeSwitch","extendsContent","playModeShowTime","loadAudioErrorPlayNext","autoHiddenCover","responsive","onAudioProgress","audioInfo","newTimer","onAudioEnded","finishPomodoro","useEffect","Notification","requestPermission","handleResize","addEventListener","removeEventListener","exp","cronTime","icon","image","requireInteraction","forEach","range","insert","numDays","appContext","fill","_","reverse","startOf","Provider","slice","Button","variant","mode","run","onConfettiComplete","recycle","tweenDuration","Modal","show","centered","backdropClassName","dialogClassName","Header","closeButton","Title","Body","Footer","AppState","App","setUserId","setUserApiKey","USER_INPUT_ACCEPTED","appState","setAppState","PROMPT_FOR_USER_CREDS","ERROR","href","target","rel","onChange","event","minLength","preventDefault","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.b1e05bd6.chunk.js","sourcesContent":["import logger from 'loglevel';\n\nif (process.env.NODE_ENV === 'development') {\n  logger.setLevel(\"WARN\");\n} else {\n  logger.setLevel(\"ERROR\");\n}\n\nexport default logger;","import React, { useContext } from \"react\";\nimport { UnfoldIcon, FoldIcon } from \"@primer/octicons-react\";\n\nimport { AppContext } from \"./UserHistory\";\n\nexport default function HistoryTableHeader(props: {\n  title: string;\n  setShowNoHistory: (val: boolean) => void;\n  showNoHistory: boolean;\n}) {\n  const context = useContext(AppContext);\n  const openHabitica = () => {\n    window.open(\"https://habitica.com/\");\n  };\n  return (\n    <thead>\n      <tr>\n        <th>\n          <div className=\"section-header\">\n            <div className=\"section-header-title\" onClick={openHabitica}>\n              <h2>{props.title}</h2>\n              {/* <div\n                role=\"button\"\n                className=\"show-no-history clickable\"\n                title=\"Show/Hide tasks with no data\"\n                onClick={() => props.setShowNoHistory(!props.showNoHistory)}\n              >\n                {props.showNoHistory ? (\n                  <FoldIcon aria-hidden=\"true\" />\n                ) : (\n                  <UnfoldIcon aria-hidden=\"true\" />\n                )}\n              </div> */}\n            </div>\n          </div>\n        </th>\n        {context.dates.map((day) => (\n          <th key={day.toString()}>\n            <div className=\"date date-heading\">\n              <span>{day.format(\"ddd\")}</span>\n              <span>{day.format(\"DD\")}</span>\n            </div>\n          </th>\n        ))}\n      </tr>\n    </thead>\n  );\n}\n","import React, { useContext, useState } from \"react\";\nimport dayjs from \"dayjs\";\n\nimport { Task } from \"./HabiticaTypes\";\nimport { DATE_KEY_FORMAT } from \"./App\";\nimport { AppContext } from \"./UserHistory\";\nimport { TaskIcon } from \"./TaskIcon\";\nimport HistoryTableHeader from \"./HistoryTableHeader\";\nimport logger from \"./logger\";\n\nvar md = require(\"habitica-markdown\");\n\nexport interface HabitHistoryProps {\n  data: Task[];\n}\n\nexport default function HabitHistory(props: HabitHistoryProps) {\n  const [showNoHistory, setShowNoHistory] = useState(true);\n\n  return (\n    <section className=\"habits\">\n      <table>\n        <HistoryTableHeader\n          title=\"Habits\"\n          setShowNoHistory={setShowNoHistory}\n          showNoHistory={showNoHistory}\n        />\n        <tbody>\n          {props.data.map((habit) => (\n            <Habit key={habit.id} showNoHistory={showNoHistory} habit={habit} />\n          ))}\n        </tbody>\n      </table>\n    </section>\n  );\n}\n\nexport function Habit(props: { habit: Task; showNoHistory: boolean }) {\n  const context = useContext(AppContext);\n  const historyMap = new Map<string, [number, number]>();\n  const { text, history } = props.habit;\n\n  logger.debug(text);\n  for (let record of history) {\n    let taskDate = dayjs(record.date).format(DATE_KEY_FORMAT);\n    logger.debug(JSON.stringify(record));\n    if (record.scoredUp !== undefined && record.scoredDown !== undefined) {\n      historyMap.set(taskDate, [record.scoredUp, record.scoredDown]);\n    }\n  }\n\n  const dailyScores = context.dates\n    .map((day) => day.format(DATE_KEY_FORMAT))\n    .map((day) => ({\n      day,\n      score: historyMap.get(day)\n    }));\n\n  if (\n    dailyScores.filter(({score}) => score !== undefined).length === 0 &&\n    !props.showNoHistory\n  ) {\n    // Don't render the component if showNoHistory is off.\n    return null;\n  }\n\n  return (\n    <tr>\n      <td className=\"task-name-row\">\n        {/* <TaskIcon task={props.habit} /> */}\n        <span\n          className=\"task-name\"\n          dangerouslySetInnerHTML={{ __html: md.render(text) }}\n        />\n      </td>\n      {dailyScores.map(({day, score}) => {\n        if (score) {\n          return <HabitScore key={day} up={score[0]} down={score[1]} />;\n        } else if (day !== dayjs(new Date()).format(DATE_KEY_FORMAT)) {\n          return (\n            <td key={day} className=\"habit-cell\">\n              <div className=\"habit-score-container\">\n                <div className=\"fail center-wrapper\">\n                  <span>✖</span>\n                </div>\n              </div>\n            </td>\n          )\n        } else {\n          return <td key={day} className=\"habit-cell\">&nbsp;</td>;\n        }\n      })}\n    </tr>\n  );\n}\n\nfunction HabitScore(props: { up: number; down: number }) {\n  let colour = props.up >= 1 ? \"success\" : \"fail\";\n  return (\n    <td className=\"habit-cell\">\n      <div className=\"habit-score-container\">\n        {props.up > 0 ? (\n          <div className={[colour, \"center-wrapper\"].join(' ')}>\n            <span>+{props.up}</span>\n          </div>\n        ) : (\n          <div className=\"fail center-wrapper\">\n            <span>{props.up}</span>\n          </div>\n        )}\n        {/* {props.down > 0 && (\n          <div className=\"fail center-wrapper\">\n            <span>-{props.down}</span>\n          </div>\n        )} */}\n      </div>\n    </td>\n  );\n}\n","import React, {useContext, useState} from 'react';\nimport dayjs from 'dayjs';\n\nimport {DATE_KEY_FORMAT} from './App';\nimport {Task} from './HabiticaTypes';\nimport {AppContext} from './UserHistory';\nimport {TaskIcon} from './TaskIcon';\nimport HistoryTableHeader from './HistoryTableHeader';\nimport logger from './logger';\nimport {Habit} from './HabitHistory';\n\nvar md = require('habitica-markdown');\n\nexport interface DailyHistoryProps {\n  toggleNumDaysToShow: () => void;\n  data: Task[];\n}\n\nexport default function DailyHistory(props: DailyHistoryProps) {\n  const [showNoHistory, setShowNoHistory] = useState(true);\n\n  return (\n    <section className=\"dailys\">\n      <table>\n        <HistoryTableHeader\n          title=\"Habits\"\n          setShowNoHistory={setShowNoHistory}\n          showNoHistory={showNoHistory}\n        />\n        <tbody onClick={props.toggleNumDaysToShow}>\n          {props.data.map(daily =>\n            daily.type === 'habit' ? (\n              <Habit\n                key={daily.id}\n                showNoHistory={showNoHistory}\n                habit={daily}\n              />\n            ) : (\n              <Daily\n                key={daily.id}\n                showNoHistory={showNoHistory}\n                daily={daily}\n              />\n            ),\n          )}\n        </tbody>\n      </table>\n      <div\n        className=\"link show-no-history\"\n        onClick={() => setShowNoHistory(!showNoHistory)}></div>\n    </section>\n  );\n}\n\nexport function Daily(props: {daily: Task; showNoHistory: boolean}) {\n  const context = useContext(AppContext);\n  const historyMap = new Map<string, number>();\n\n  const {text, history, streak} = props.daily;\n\n  logger.debug(text);\n  for (let i = 1; i < history.length; i++) {\n    const delta = history[i].value - history[i - 1].value;\n    let taskUpdateTime = dayjs(history[i].date);\n    logger.debug(\n      taskUpdateTime.format('YYYY-MM-DD HH:mm:ss') + ': ' + history[i].value,\n    );\n    // Only consider times when the task value changes (or the first value).\n    if (delta !== 0) {\n      // This task update was done via cron so the task was actually done the\n      // day before.\n      if (\n        context.cronIntervals.search(\n          taskUpdateTime.unix(),\n          taskUpdateTime.unix(),\n        ).length > 0\n      ) {\n        // Daily could have been completed twice in the cron time so if a\n        // completion already exists for yesterday then this completion must be\n        // for today.\n        const oneDayAgo = taskUpdateTime.subtract(1, 'day');\n        if (!historyMap.has(oneDayAgo.format(DATE_KEY_FORMAT))) {\n          taskUpdateTime = oneDayAgo;\n        } else {\n          if (historyMap.has(taskUpdateTime.format(DATE_KEY_FORMAT))) {\n            logger.warn(\n              `Too many completions for ${text} on ${taskUpdateTime}`,\n            );\n          }\n        }\n      }\n      const taskDate = taskUpdateTime.format(DATE_KEY_FORMAT);\n      historyMap.set(taskDate, delta);\n    }\n  }\n  console.groupEnd();\n\n  const dailyDeltas = context.dates\n    .map(day => day.format(DATE_KEY_FORMAT))\n    .map(day => ({\n      day,\n      delta: historyMap.get(day),\n    }));\n\n  if (\n    dailyDeltas.filter(({delta}) => delta !== undefined).length === 0 &&\n    !props.showNoHistory\n  ) {\n    // Don't render the component if showNoHistory is off.\n    return null;\n  }\n\n  return (\n    <tr>\n      <td className=\"task-name-row\">\n        {/* <TaskIcon task={props.daily} /> */}\n        <span\n          className=\"task-name\"\n          dangerouslySetInnerHTML={{__html: md.render(text)}}\n        />\n      </td>\n      {dailyDeltas.map(({day, delta}) => (\n        <DailyStatus key={day} day={day} delta={delta!} streak={streak} />\n      ))}\n    </tr>\n  );\n}\n\nfunction DailyStatus(props: {\n  day: string;\n  delta: number | undefined;\n  streak: number;\n}) {\n  let classNames = ['daily-cell'];\n  let symbolNames = ['symbol'];\n  let symbol;\n\n  if (props.day !== dayjs(new Date()).format(DATE_KEY_FORMAT)) {\n    if (!props.delta || props.delta <= 0) {\n      classNames.push('fail');\n      symbol = '✖';\n    } else {\n      classNames.push('success');\n      symbol = '✓';\n    }\n  } else {\n    if (!props.delta || props.delta === 0) {\n      classNames.push('pass');\n      symbolNames.push('streak');\n      symbol = props.streak == 0 ? '0🥶' : props.streak + '🔥';\n    } else if (props.delta > 0) {\n      classNames.push('success');\n      symbol = '✓';\n    } else {\n      classNames.push('fail');\n      symbol = '✖';\n    }\n  }\n\n  return (\n    <td className={classNames.join(' ')}>\n      {symbol && (\n        <div className=\"center-wrapper\">\n          <span className={symbolNames.join(' ')}>{symbol}</span>\n        </div>\n      )}\n    </td>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/lofi-pomodoro-50min.40d48fb2.mp3\";","import React, {useState, useEffect, useContext, useRef} from 'react';\nimport IntervalTree from 'node-interval-tree';\nimport dayjs, {Dayjs} from 'dayjs';\nimport Confetti from 'react-confetti';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport ReactJkMusicPlayer from 'react-jinke-music-player';\nimport 'react-jinke-music-player/assets/index.css';\nimport logger from './logger';\n\nimport {Task, History} from './HabiticaTypes';\nimport DailyHistory from './DailyHistory';\n\nimport LOFI_MP3 from './lofi-pomodoro-50min.mp3';\n\nconst audioList1 = [\n  {\n    name: 'lofi',\n    // singer: 'Luis Fonsi',\n    // cover:\n    //   'http://res.cloudinary.com/alick/image/upload/v1502689731/Despacito_uvolhp.jpg',\n    musicSrc: LOFI_MP3,\n    // support async fetch music src. eg.\n    // musicSrc: async () => {\n    //   return await fetch('/api')\n    // },\n  },\n];\n\nexport const DATE_KEY_FORMAT = 'YYYYMMDD';\n\nconst HABITICA_API_URL = 'https://habitica.com/api/v3';\nconst CLIENT_KEY = '0d9428fd-d6fa-45f3-a4db-f130e3ef10ea-HabiticaTracker';\nconst USER_PATH = '/user';\nconst TASKS_PATH = '/tasks/user';\nconst TODOS_COMPLETED_PATH = '/tasks/user?type=completedTodos';\nconst NUM_DAYS_WEEK = 8;\nconst NUM_DAYS_MONTH = 31;\n\n/**\n * Tasks completed during Cron time are tasks which were completed the previous\n * day. These are different from tasks which were completed at other times\n * which are assigned to the date on which they were completed. The Cron time\n * is used to guess at which tasks fall into each category. Because the task\n * completion time is not exactly equal to the cron time, this constant is used\n * to create a Cron time buffer to designate all tasks which were completed\n * this amount of time before the Cron time as Cron tasks.\n */\nconst CRON_BUFFER_DURATION_SECONDS = 300;\n\nfunction getWindowDimensions() {\n  const {innerWidth: width, innerHeight: height} = window;\n  return {\n    width,\n    height,\n  };\n}\n\nfunction getRandomInt(min: number, max: number) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\n}\n\nfunction setRandConfettiNum() {\n  return getRandomInt(2000, 5000);\n}\n\nconst FIFTY_MIN = 50 * 60;\n\nfunction fancyTimeFormat(duration: number) {\n  // Hours, minutes and seconds\n  var hrs = ~~(duration / 3600);\n  var mins = ~~((duration % 3600) / 60);\n  var secs = ~~duration % 60;\n\n  // Output like \"1:01\" or \"4:03:59\" or \"123:03:59\"\n  var ret = '';\n\n  if (hrs > 0) {\n    ret += '' + hrs + ':' + (mins < 10 ? '0' : '');\n  }\n\n  ret += '' + mins + ':' + (secs < 10 ? '0' : '');\n  ret += '' + secs;\n  return ret;\n}\n\nexport const AppContext = React.createContext({\n  showTaskIcons: false,\n  dates: Array<Dayjs>(),\n  cronIntervals: new IntervalTree(),\n});\n\ninterface UserHistoryProps {\n  userId: string;\n  userApiKey: string;\n  setError: (errorMessage: Error) => void;\n}\n\nexport default function UserHistory(props: UserHistoryProps) {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions(),\n  );\n  const [showConfetti, setShowConfetti] = useState<boolean>(false);\n  const [numberOfPieces, setNumberOfPieces] = useState<number>(\n    setRandConfettiNum(),\n  );\n  const [audio, setAudio] = useState({currentTime: 0, play: () => {}});\n\n  // App states\n  const [isLoadingUserData, setLoadingUserData] = useState(true);\n  const [isLoadingTaskData, setLoadingTaskData] = useState(true);\n  const [isLoadingTodoData, setLoadingTodoData] = useState(true);\n\n  // User options\n  const [numDaysToShow, setNumDaysToShow] = useState<number>(NUM_DAYS_WEEK);\n  const [showTaskIcons, setShowTaskIcons] = useState<boolean>(false);\n\n  // User data\n  const [cronTimes, setCronTimes] = useState<Array<[number, number]>>([]);\n  const [habits, setHabits] = useState<Task[]>([]);\n  const [dailys, setDailys] = useState<Task[]>([]);\n  const [todos, setTodos] = useState<Task[]>([]);\n\n  // Pomodoro\n  const [inPomodoroSession, setInPomodoroSession] = useState(false);\n  const [pomodoroTimer, setPomodoroTimer] = useState(FIFTY_MIN);\n  const pomodoroTimerRef = useRef(pomodoroTimer);\n  pomodoroTimerRef.current = pomodoroTimer;\n\n  const [showDialog, setShowDialog] = useState(false);\n  const handleCloseDialog = () => setShowDialog(false);\n  const handleShowDialog = () => setShowDialog(true);\n\n  const {userId, userApiKey} = props;\n\n  function toggleNumDaysToShow() {\n    setNumDaysToShow(\n      numDaysToShow === NUM_DAYS_WEEK ? NUM_DAYS_MONTH : NUM_DAYS_WEEK,\n    );\n  }\n\n  const onConfettiComplete = () => {\n    setNumberOfPieces(setRandConfettiNum());\n    setShowConfetti(false);\n  };\n\n  const fetchWithApiKey = (url: string) => {\n    return fetch(url, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-api-user': userId,\n        'x-api-key': userApiKey,\n        'x-client': CLIENT_KEY,\n      },\n    });\n  };\n\n  const handleApiError = (res: any) => {\n    if (!res.success) {\n      throw new Error(res.message);\n    }\n    return res;\n  };\n\n  const setError = props.setError;\n\n  const readData = () =>\n    fetchWithApiKey(HABITICA_API_URL + TASKS_PATH)\n      .then(res => res.json())\n      .then(handleApiError)\n      .then(\n        result => {\n          setHabits(result.data.filter((task: Task) => task.type === 'habit'));\n          setDailys(result.data.filter((task: Task) => task.type === 'daily'));\n          setLoadingTaskData(false);\n          console.log(HABITICA_API_URL + TASKS_PATH, JSON.stringify(result));\n        },\n        error => {\n          setError(error);\n        },\n      );\n\n  const scoreTask = (taskId: string) => {\n    return fetch(HABITICA_API_URL + '/tasks/' + taskId + '/score/up', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'x-api-user': userId,\n        'x-api-key': userApiKey,\n        'x-client': CLIENT_KEY,\n      },\n    })\n      .then(res => res.json())\n      .then(handleApiError)\n      .then(\n        result => {\n          setShowConfetti(true);\n          console.log(\n            HABITICA_API_URL + '/tasks/' + taskId + '/score/up',\n            JSON.stringify(result),\n          );\n        },\n        error => {\n          setError(error);\n        },\n      )\n      .then(readData);\n  };\n\n  const dailyGoal = () => scoreTask('b85dc3ec-7836-4827-aa68-e7e605c1489e');\n\n  const scorePomodoro = () => scoreTask('ec59d7c1-e692-4b17-b2e0-6b6a76aedcc3');\n\n  const reflect = () => scoreTask('13ab931b-b04a-47f0-9555-ad3bc4428dd6');\n\n  const audioOptions = {\n    getAudioInstance: (audio: any) => {\n      setAudio(audio);\n    },\n\n    // audio lists model\n    audioLists: audioList1,\n\n    // default play index of the audio player  [type `number` default `0`]\n    defaultPlayIndex: 0,\n\n    // Specifies movement boundaries. Accepted values:\n    // - `parent` restricts movement within the node's offsetParent\n    //    (nearest node with position relative or absolute), or\n    // - a selector, restricts movement within the targeted node\n    // - An object with `left, top, right, and bottom` properties.\n    //   These indicate how far in each direction the draggable\n    //   can be moved.\n    // Ref: https://github.com/STRML/react-draggable#draggable-api\n    bounds: 'body',\n\n    defaultPosition: {top: 260, left: 10},\n\n    // The Audio Can be deleted  [type `Boolean`, default `true`]\n    remove: false,\n\n    // audio mode        mini | full          [type `String`  default `mini`]\n    // mode: \"full\",\n\n    // Whether the audio is played after loading is completed. [type `Boolean` default 'true']\n    autoPlay: false,\n\n    // Whether you can switch between two modes, full => mini  or mini => full   [type 'Boolean' default 'true']\n    toggleMode: false,\n\n    // audio cover is show of the \"mini\" mode [type `Boolean` default 'true']\n    showMiniModeCover: false,\n\n    // audio playing progress is show of the \"mini\"  mode\n    showMiniProcessBar: true,\n\n    // drag the audio progress bar [type `Boolean` default `true`]\n    seeked: false,\n\n    // Displays the audio load progress bar.  [type `Boolean` default `true`]\n    showProgressLoadBar: true,\n\n    // play button display of the audio player panel   [type `Boolean` default `true`]\n    showPlay: false,\n\n    // reload button display of the audio player panel   [type `Boolean` default `true`]\n    showReload: false,\n\n    // download button display of the audio player panel   [type `Boolean` default `true`]\n    showDownload: false,\n\n    // loop button display of the audio player panel   [type `Boolean` default `true`]\n    showPlayMode: false,\n\n    // theme toggle switch  display of the audio player panel   [type `Boolean` default `true`]\n    showThemeSwitch: false,\n\n    // Extensible custom content       [type 'Array' default '-' ]\n    extendsContent: null,\n\n    // playModeText show time [type `Number(ms)` default `600`]\n    playModeShowTime: 600,\n\n    // Whether to try playing the next audio when the current audio playback fails [type `Boolean` default `true`]\n    loadAudioErrorPlayNext: false,\n\n    // Auto hide the cover photo if no cover photo is available [type `Boolean` default `false`]\n    autoHiddenCover: true,\n\n    // Enable responsive player, auto toggle desktop and mobile [type `Boolean` default `true`]\n    responsive: false,\n\n    // audio play handle\n    // onAudioPlay() {\n    //   console.log('audio playing')\n    // },\n\n    onAudioProgress(audioInfo: any) {\n      // console.log('audio progress', audioInfo)\n      let newTimer = FIFTY_MIN - audioInfo.currentTime;\n      setPomodoroTimer(newTimer);\n    },\n\n    // The single song is ended handle\n    onAudioEnded() {\n      finishPomodoro();\n      // console.log('audio ended')\n    },\n  };\n\n  useEffect(() => {\n    if (!('Notification' in window)) {\n      console.log('This browser does not support desktop notification');\n    } else {\n      Notification.requestPermission();\n    }\n  }, []);\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  // Fetch user data to get cron times.\n  useEffect(() => {\n    fetchWithApiKey(HABITICA_API_URL + USER_PATH)\n      .then(res => res.json())\n      .then(handleApiError)\n      .then(\n        result => {\n          setCronTimes(\n            result.data.history.exp.map((history: History) => {\n              const cronTime = dayjs(history.date);\n              return [\n                cronTime.unix() - CRON_BUFFER_DURATION_SECONDS,\n                cronTime.unix() + CRON_BUFFER_DURATION_SECONDS,\n              ];\n            }),\n          );\n          setLoadingUserData(false);\n        },\n        error => {\n          setError(error);\n        },\n      );\n  }, []); // DO NOT REMOVE the empty dependency array\n\n  // Fetch habit and daily data.\n  useEffect(() => {\n    readData();\n  }, []); // DO NOT REMOVE the empty dependency array\n\n  // Fetch completed todos.\n  useEffect(() => {\n    fetchWithApiKey(HABITICA_API_URL + TODOS_COMPLETED_PATH)\n      .then(res => res.json())\n      .then(handleApiError)\n      .then(\n        result => {\n          setTodos(result.data.filter((task: Task) => task.type === 'todo'));\n          setLoadingTodoData(false);\n        },\n        error => {\n          setError(error);\n        },\n      );\n  }, []); // DO NOT REMOVE the empty dependency array\n\n  const startPomodoro = () => {\n    setInPomodoroSession(true);\n    // pomodoroTimeout()\n    if (audio) {\n      audio.currentTime = 0;\n      audio.play();\n    }\n    handleShowDialog();\n  };\n\n  const runPomodoro = () => {\n    let newTimer = pomodoroTimerRef.current - 1;\n    setPomodoroTimer(newTimer);\n\n    if (newTimer === 0) {\n      finishPomodoro();\n    } else {\n      pomodoroTimeout();\n    }\n  };\n\n  const pomodoroTimeout = () => setTimeout(runPomodoro, 1000);\n\n  const finishPomodoro = () => {\n    handleCloseDialog();\n    setInPomodoroSession(false);\n    setPomodoroTimer(FIFTY_MIN);\n    scorePomodoro();\n    new Notification('pomodoro is finished yo 🎉', {\n      icon: 'https://vwskwong.github.io/assets/Logo/apple-touch-icon.png',\n      image: 'https://c.tenor.com/I4d1QyAghmUAAAAM/hooray-letsgo.gif',\n      requireInteraction: true,\n    });\n  };\n\n  if (isLoadingUserData || isLoadingTaskData || isLoadingTodoData) {\n    return (\n      <div className=\"App\">\n        <p>Loading...</p>\n      </div>\n    );\n  } else {\n    const cronIntervals = new IntervalTree();\n    cronTimes.forEach(range => {\n      logger.debug(`cron: ${dayjs.unix(range[0])} - ${dayjs.unix(range[1])}`);\n      cronIntervals.insert(range[0], range[1], true);\n    });\n\n    const appContext = {\n      showTaskIcons: showTaskIcons,\n      dates: getDateArray(numDaysToShow),\n      cronIntervals,\n    };\n\n    return (\n      <div className=\"App\">\n        <AppContext.Provider value={appContext}>\n          {/* <AppControls\n            numDaysToShow={numDaysToShow}\n            setNumDaysToShow={setNumDaysToShow}\n            toggleTaskIcons={() => setShowTaskIcons(!showTaskIcons)}\n          /> */}\n          {/* <div className=\"identity\">\n            <span>Disciplined ♦ Ambitious ♦ Universal</span>\n          </div> */}\n          <DailyHistory\n            toggleNumDaysToShow={toggleNumDaysToShow}\n            data={[...dailys.slice(0, -1), ...habits, ...dailys.slice(-1)]}\n          />\n          {/* <HabitHistory data={habits} /> */}\n          {/* <TodoHistory data={todos} /> */}\n          <div className=\"buttons-container\">\n            {/* <div className=\"button-container\">\n              <Button variant=\"outline-success\" onClick={dailyGoal}>✓ Daily Goal</Button>\n            </div> */}\n            <div className=\"button-container\">\n              <Button\n                variant=\"outline-success\"\n                onClick={inPomodoroSession ? undefined : startPomodoro}>\n                {inPomodoroSession\n                  ? fancyTimeFormat(pomodoroTimer)\n                  : '🧠 start focus you shithead'}\n              </Button>\n            </div>\n            {/* <div className=\"button-container\">\n              <Button variant=\"outline-success\" onClick={reflect}>✓ Reflect</Button>\n            </div> */}\n          </div>\n          <ReactJkMusicPlayer {...audioOptions} mode=\"mini\" />\n          <Confetti\n            width={windowDimensions.width}\n            height={windowDimensions.height}\n            run={showConfetti}\n            onConfettiComplete={onConfettiComplete}\n            numberOfPieces={numberOfPieces}\n            recycle={false}\n            tweenDuration={50000}\n          />\n          <Modal\n            show={showDialog}\n            centered\n            backdropClassName=\"dialogWrapper\"\n            dialogClassName=\"dialog\">\n            <Modal.Header closeButton>\n              <Modal.Title>\n                lets goo 🚨 {fancyTimeFormat(pomodoroTimer)} 🚨\n              </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <p className=\"dialogText\">\n                ✍️ Draw my line on mediocrity.\n                <br />\n                👁 Visualize: negative + positive\n                <br />\n                💬 Affirm: Who do I want to be?\n                <br />\n                🎯 What do I want to accomplish right now?\n                <br />\n                🧩 Breakdown the task\n                <br />\n                🫵 Point n Call\n              </p>\n            </Modal.Body>\n            <Modal.Footer>\n              <Button variant=\"secondary\" onClick={handleCloseDialog}>\n                🚨 go brrrr\n              </Button>\n            </Modal.Footer>\n          </Modal>\n        </AppContext.Provider>\n      </div>\n    );\n  }\n}\n\nfunction AppControls(props: {\n  numDaysToShow: number;\n  setNumDaysToShow: (n: number) => void;\n  toggleTaskIcons: () => void;\n}) {\n  const context = useContext(AppContext);\n  const openHabitica = () => {\n    window.open('https://habitica.com/');\n  };\n  const showMore = () => props.setNumDaysToShow(props.numDaysToShow + 7);\n  const showLess = () => props.setNumDaysToShow(props.numDaysToShow - 7);\n  const monthString = getMonthString(context.dates);\n\n  return (\n    <div className=\"app-controls\">\n      <div className=\"date-header\" onClick={openHabitica}>\n        {monthString}\n      </div>\n      {/* <div className=\"date-header\" onClick={openHabitica}>Habitica</div> */}\n      {/* <div>\n        <span role=\"button\" className=\"link\" onClick={showMore}>\n          +1 week\n        </span>\n        {props.numDaysToShow > 7 ? (\n          <span>\n            <span> / </span>\n            <span role=\"button\" className=\"link\" onClick={showLess}>\n              -1 week\n            </span>\n          </span>\n        ) : null}\n      </div> */}\n      {/* <div className=\"date-header\">{monthString}</div> */}\n      {/* <span\n        role=\"button\"\n        className=\"link\"\n        onClick={props.toggleTaskIcons}\n        title=\"Show/Hide task icons\"\n      >\n        {context.showTaskIcons ? \"-\" : \"+\"} Task Icons\n      </span> */}\n    </div>\n  );\n}\n\nfunction getMonthString(dates: Dayjs[]): string {\n  const monthStart = dates[0];\n  const monthEnd = dates[dates.length - 1];\n  if (monthStart.month() === monthEnd.month()) {\n    return monthEnd.format('MMMM YYYY');\n  }\n  let startFormat = monthStart.year() === monthEnd.year() ? 'MMM' : 'MMM YYYY';\n  let endFormat = 'MMM YYYY';\n  return [monthStart.format(startFormat), monthEnd.format(endFormat)].join('–');\n}\n\n/** Get all the dates to show.  */\nfunction getDateArray(numDays: number): Dayjs[] {\n  return Array(numDays)\n    .fill(0)\n    .map((_, i) => i)\n    .reverse()\n    .map(i => dayjs().subtract(i, 'day').startOf('day'));\n}\n","import React, { useState, ChangeEvent } from \"react\";\n\nimport \"./App.css\";\nimport UserHistory from \"./UserHistory\";\n\nexport const DATE_KEY_FORMAT = \"YYYYMMDD\";\n\nexport enum AppState {\n  PROMPT_FOR_USER_CREDS,\n  USER_INPUT_ACCEPTED,\n  ERROR,\n}\n\nfunction App() {\n  const [userId, setUserId] = useState<string>(\"9ebcbcde-d6a2-40d6-9ec1-99de1e5e7470\");\n  const [userApiKey, setUserApiKey] = useState<string>(\"82efbb68-ab5b-426a-bcad-da7fdc3273bb\");\n  const [error, setError] = useState<Error>();\n  const [appState, setAppState] = useState<AppState>(\n    AppState.USER_INPUT_ACCEPTED\n  );\n\n  const setAppError = (error: Error) => {\n    setError(error);\n    setAppState(AppState.ERROR);\n  };\n\n  const handleUserIdChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setUserId(event.target.value);\n  };\n\n  const handleUserApiKeyChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setUserApiKey(event.target.value);\n  };\n\n  const handleSubmit = (event: React.MouseEvent) => {\n    event.preventDefault();\n    setAppState(AppState.USER_INPUT_ACCEPTED);\n  };\n\n  if (\n    appState === AppState.PROMPT_FOR_USER_CREDS ||\n    appState === AppState.ERROR\n  ) {\n    return (\n      <div className=\"App\">\n        <h1>Habitica Tracker</h1>\n        {error && <div className=\"error\">Error: {error.message}</div>}\n        <p>\n          This tool displays a history of your Habits, Dailies and Todos in\n          Habitica.\n        </p>\n        <p>\n          Your User ID and API key can be found on the{\" \"}\n          <a\n            href=\"https://habitica.com/user/settings/api\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Settings &gt; API\n          </a>{\" \"}\n          page in Habitica.\n        </p>\n        <form className=\"user-api-form\">\n          <div className=\"label-container\">\n            <div className=\"label\">User ID</div>\n            <input\n              type=\"text\"\n              className=\"user-id\"\n              value={userId}\n              onChange={handleUserIdChange}\n            />\n          </div>\n          <div className=\"label-container\">\n            <span className=\"label\">API Key</span>\n            <input\n              type=\"password\"\n              className=\"api-key\"\n              value={userApiKey}\n              onChange={handleUserApiKeyChange}\n              minLength={36}\n            />\n          </div>\n          <div className=\"submit-wrapper\">\n            <input type=\"submit\" value=\"Fetch My Data\" onClick={handleSubmit} />\n          </div>\n        </form>\n        <h2>Note</h2>\n        <ul>\n          <li>\n            Your user ID and API key will be sent to the Habitica servers and\n            nowhere else.\n          </li>\n          <li>\n            This app does not change your Habitica account data. It only fetches\n            and displays data.\n          </li>\n        </ul>\n      </div>\n    );\n  } else {\n    return (\n      <UserHistory\n        userId={userId}\n        userApiKey={userApiKey}\n        setError={setAppError}\n      />\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <div className=\"app-wrapper\">\n      <App />\n    </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}