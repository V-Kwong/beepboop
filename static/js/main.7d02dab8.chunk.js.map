{"version":3,"sources":["logger.ts","HistoryTableHeader.tsx","HabitHistory.tsx","DailyHistory.tsx","lofi-pomodoro.mp3","UserHistory.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["logger","setLevel","HistoryTableHeader","props","context","useContext","AppContext","className","onClick","window","open","title","dates","map","day","format","toString","md","require","Habit","historyMap","Map","habit","text","history","debug","record","taskDate","dayjs","date","DATE_KEY_FORMAT","JSON","stringify","undefined","scoredUp","scoredDown","set","dailyScores","score","get","filter","length","showNoHistory","dangerouslySetInnerHTML","__html","render","HabitScore","up","down","Date","colour","join","DailyHistory","useState","setShowNoHistory","data","daily","type","id","Daily","streak","i","delta","value","taskUpdateTime","cronIntervals","search","unix","oneDayAgo","subtract","has","warn","console","groupEnd","dailyDeltas","DailyStatus","symbol","classNames","symbolNames","push","audioList1","name","musicSrc","HABITICA_API_URL","CLIENT_KEY","TASKS_PATH","getWindowDimensions","width","innerWidth","height","innerHeight","setRandConfettiNum","min","max","Math","ceil","floor","random","NINTY_MIN","fancyTimeFormat","duration","hrs","mins","secs","ret","React","createContext","showTaskIcons","Array","IntervalTree","UserHistory","windowDimensions","setWindowDimensions","showConfetti","setShowConfetti","numberOfPieces","setNumberOfPieces","currentTime","play","audio","setAudio","isLoadingUserData","setLoadingUserData","isLoadingTaskData","setLoadingTaskData","isLoadingTodoData","setLoadingTodoData","numDaysToShow","cronTimes","setCronTimes","habits","setHabits","dailys","setDailys","setTodos","inPomodoroSession","setInPomodoroSession","pomodoroTimer","setPomodoroTimer","pomodoroTimerRef","useRef","current","showDialog","setShowDialog","handleCloseDialog","userId","userApiKey","fetchWithApiKey","url","fetch","method","headers","handleApiError","res","success","Error","message","setError","readData","then","json","result","task","log","error","scoreTask","taskId","audioOptions","getAudioInstance","audioLists","defaultPlayIndex","bounds","defaultPosition","top","left","remove","autoPlay","toggleMode","showMiniModeCover","showMiniProcessBar","seeked","showProgressLoadBar","showPlay","showReload","showDownload","showPlayMode","showThemeSwitch","extendsContent","playModeShowTime","loadAudioErrorPlayNext","autoHiddenCover","responsive","onAudioProgress","audioInfo","newTimer","onAudioEnded","finishPomodoro","useEffect","Notification","requestPermission","handleResize","addEventListener","removeEventListener","exp","cronTime","icon","image","requireInteraction","forEach","range","insert","numDays","appContext","fill","_","reverse","startOf","Provider","slice","Button","variant","mode","run","onConfettiComplete","recycle","tweenDuration","Modal","show","centered","backdropClassName","dialogClassName","Header","closeButton","Title","Body","Footer","AppState","App","setUserId","setUserApiKey","USER_INPUT_ACCEPTED","appState","setAppState","PROMPT_FOR_USER_CREDS","ERROR","href","target","rel","onChange","event","minLength","preventDefault","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.7d02dab8.chunk.js","sourcesContent":["import logger from 'loglevel';\n\nif (process.env.NODE_ENV === 'development') {\n  logger.setLevel(\"WARN\");\n} else {\n  logger.setLevel(\"ERROR\");\n}\n\nexport default logger;","import React, { useContext } from \"react\";\nimport { UnfoldIcon, FoldIcon } from \"@primer/octicons-react\";\n\nimport { AppContext } from \"./UserHistory\";\n\nexport default function HistoryTableHeader(props: {\n  title: string;\n  setShowNoHistory: (val: boolean) => void;\n  showNoHistory: boolean;\n}) {\n  const context = useContext(AppContext);\n  const openHabitica = () => {\n    window.open(\"https://habitica.com/\");\n  };\n  return (\n    <thead>\n      <tr>\n        <th>\n          <div className=\"section-header\">\n            <div className=\"section-header-title\" onClick={openHabitica}>\n              <h2>{props.title}</h2>\n              {/* <div\n                role=\"button\"\n                className=\"show-no-history clickable\"\n                title=\"Show/Hide tasks with no data\"\n                onClick={() => props.setShowNoHistory(!props.showNoHistory)}\n              >\n                {props.showNoHistory ? (\n                  <FoldIcon aria-hidden=\"true\" />\n                ) : (\n                  <UnfoldIcon aria-hidden=\"true\" />\n                )}\n              </div> */}\n            </div>\n          </div>\n        </th>\n        {context.dates.map((day) => (\n          <th key={day.toString()}>\n            <div className=\"date date-heading\">\n              <span>{day.format(\"ddd\")}</span>\n              <span>{day.format(\"DD\")}</span>\n            </div>\n          </th>\n        ))}\n      </tr>\n    </thead>\n  );\n}\n","import React, { useContext, useState } from \"react\";\nimport dayjs from \"dayjs\";\n\nimport { Task } from \"./HabiticaTypes\";\nimport { DATE_KEY_FORMAT } from \"./App\";\nimport { AppContext } from \"./UserHistory\";\nimport { TaskIcon } from \"./TaskIcon\";\nimport HistoryTableHeader from \"./HistoryTableHeader\";\nimport logger from \"./logger\";\n\nvar md = require(\"habitica-markdown\");\n\nexport interface HabitHistoryProps {\n  data: Task[];\n}\n\nexport default function HabitHistory(props: HabitHistoryProps) {\n  const [showNoHistory, setShowNoHistory] = useState(true);\n\n  return (\n    <section className=\"habits\">\n      <table>\n        <HistoryTableHeader\n          title=\"Habits\"\n          setShowNoHistory={setShowNoHistory}\n          showNoHistory={showNoHistory}\n        />\n        <tbody>\n          {props.data.map((habit) => (\n            <Habit key={habit.id} showNoHistory={showNoHistory} habit={habit} />\n          ))}\n        </tbody>\n      </table>\n    </section>\n  );\n}\n\nexport function Habit(props: { habit: Task; showNoHistory: boolean }) {\n  const context = useContext(AppContext);\n  const historyMap = new Map<string, [number, number]>();\n  const { text, history } = props.habit;\n\n  logger.debug(text);\n  for (let record of history) {\n    let taskDate = dayjs(record.date).format(DATE_KEY_FORMAT);\n    logger.debug(JSON.stringify(record));\n    if (record.scoredUp !== undefined && record.scoredDown !== undefined) {\n      historyMap.set(taskDate, [record.scoredUp, record.scoredDown]);\n    }\n  }\n\n  const dailyScores = context.dates\n    .map((day) => day.format(DATE_KEY_FORMAT))\n    .map((day) => ({\n      day,\n      score: historyMap.get(day)\n    }));\n\n  if (\n    dailyScores.filter(({score}) => score !== undefined).length === 0 &&\n    !props.showNoHistory\n  ) {\n    // Don't render the component if showNoHistory is off.\n    return null;\n  }\n\n  return (\n    <tr>\n      <td className=\"task-name-row\">\n        {/* <TaskIcon task={props.habit} /> */}\n        <span\n          className=\"task-name\"\n          dangerouslySetInnerHTML={{ __html: md.render(text) }}\n        />\n      </td>\n      {dailyScores.map(({day, score}) => {\n        if (score) {\n          return <HabitScore key={day} up={score[0]} down={score[1]} />;\n        } else if (day !== dayjs(new Date()).format(DATE_KEY_FORMAT)) {\n          return (\n            <td key={day} className=\"habit-cell\">\n              <div className=\"habit-score-container\">\n                <div className=\"fail center-wrapper\">\n                  <span>✖</span>\n                </div>\n              </div>\n            </td>\n          )\n        } else {\n          return <td key={day} className=\"habit-cell\">&nbsp;</td>;\n        }\n      })}\n    </tr>\n  );\n}\n\nfunction HabitScore(props: { up: number; down: number }) {\n  let colour = props.up >= 1 ? \"success\" : \"fail\";\n  return (\n    <td className=\"habit-cell\">\n      <div className=\"habit-score-container\">\n        {props.up > 0 ? (\n          <div className={[colour, \"center-wrapper\"].join(' ')}>\n            <span>+{props.up}</span>\n          </div>\n        ) : (\n          <div className=\"fail center-wrapper\">\n            <span>{props.up}</span>\n          </div>\n        )}\n        {/* {props.down > 0 && (\n          <div className=\"fail center-wrapper\">\n            <span>-{props.down}</span>\n          </div>\n        )} */}\n      </div>\n    </td>\n  );\n}\n","import React, { useContext, useState } from \"react\";\nimport dayjs from \"dayjs\";\n\nimport { DATE_KEY_FORMAT } from \"./App\";\nimport { Task } from \"./HabiticaTypes\";\nimport { AppContext } from \"./UserHistory\";\nimport { TaskIcon } from \"./TaskIcon\";\nimport HistoryTableHeader from \"./HistoryTableHeader\";\nimport logger from \"./logger\";\nimport { Habit } from \"./HabitHistory\";\n\nvar md = require(\"habitica-markdown\");\n\nexport interface DailyHistoryProps {\n  data: Task[];\n}\n\nexport default function DailyHistory(props: DailyHistoryProps) {\n  const [showNoHistory, setShowNoHistory] = useState(true);\n\n  return (\n    <section className=\"dailys\">\n      <table>\n        <HistoryTableHeader\n          title=\"Habits\"\n          setShowNoHistory={setShowNoHistory}\n          showNoHistory={showNoHistory}\n        />\n        <tbody>\n          {props.data.map((daily) => daily.type === 'habit' ? (\n            <Habit key={daily.id} showNoHistory={showNoHistory} habit={daily} />\n          ) : (\n            <Daily key={daily.id} showNoHistory={showNoHistory} daily={daily} />\n          ))}\n        </tbody>\n      </table>\n      <div\n        className=\"link show-no-history\"\n        onClick={() => setShowNoHistory(!showNoHistory)}\n      ></div>\n    </section>\n  );\n}\n\nexport function Daily(props: { daily: Task; showNoHistory: boolean }) {\n  const context = useContext(AppContext);\n  const historyMap = new Map<string, number>();\n\n  const { text, history, streak } = props.daily;\n\n  logger.debug(text);\n  for (let i = 1; i < history.length; i++) {\n    const delta = history[i].value - history[i - 1].value;\n    let taskUpdateTime = dayjs(history[i].date);\n    logger.debug(\n      taskUpdateTime.format(\"YYYY-MM-DD HH:mm:ss\") + \": \" + history[i].value\n    );\n    // Only consider times when the task value changes (or the first value).\n    if (delta !== 0) {\n      // This task update was done via cron so the task was actually done the\n      // day before.\n      if (\n        context.cronIntervals.search(\n          taskUpdateTime.unix(),\n          taskUpdateTime.unix()\n        ).length > 0\n      ) {\n        // Daily could have been completed twice in the cron time so if a\n        // completion already exists for yesterday then this completion must be\n        // for today.\n        const oneDayAgo = taskUpdateTime.subtract(1, \"day\");\n        if (!historyMap.has(oneDayAgo.format(DATE_KEY_FORMAT))) {\n          taskUpdateTime = oneDayAgo;\n        } else {\n          if (historyMap.has(taskUpdateTime.format(DATE_KEY_FORMAT))) {\n            logger.warn(\n              `Too many completions for ${text} on ${taskUpdateTime}`\n            );\n          }\n        }\n      }\n      const taskDate = taskUpdateTime.format(DATE_KEY_FORMAT);\n      historyMap.set(taskDate, delta);\n    }\n  }\n  console.groupEnd();\n\n  const dailyDeltas = context.dates\n    .map((day) => day.format(DATE_KEY_FORMAT))\n    .map((day) => ({\n      day,\n      delta: historyMap.get(day)\n    }));\n\n  if (\n    dailyDeltas.filter(({delta}) => delta !== undefined).length === 0 &&\n    !props.showNoHistory\n  ) {\n    // Don't render the component if showNoHistory is off.\n    return null;\n  }\n\n  return (\n    <tr>\n      <td className=\"task-name-row\">\n        {/* <TaskIcon task={props.daily} /> */}\n        <span\n          className=\"task-name\"\n          dangerouslySetInnerHTML={{ __html: md.render(text) }}\n        />\n      </td>\n      {dailyDeltas.map(({day, delta}) => (\n        <DailyStatus key={day} day={day} delta={delta!} streak={streak} />\n      ))}\n    </tr>\n  );\n}\n\nfunction DailyStatus(props: { day: string, delta: number | undefined, streak: number }) {\n  let classNames = [\"daily-cell\"];\n  let symbolNames = [\"symbol\"];\n  let symbol;\n\n  if(props.day !== dayjs(new Date()).format(DATE_KEY_FORMAT)) {\n    if (!props.delta || props.delta <= 0) {\n      classNames.push(\"fail\");\n      symbol = \"✖\";\n    } else {\n      classNames.push(\"success\");\n      symbol = \"✓\";\n    }\n  } else {\n    if (!props.delta || props.delta === 0) {\n      classNames.push(\"pass\");\n      symbolNames.push('streak');\n      symbol = props.streak == 0 ? \"0🥶\" : props.streak + \"🔥\";\n    } else if (props.delta > 0) {\n      classNames.push(\"success\");\n      symbol = \"✓\";\n    } else {\n      classNames.push(\"fail\");\n      symbol = \"✖\";\n    }\n  }\n\n  return (\n    <td className={classNames.join(\" \")}>\n      {symbol && (\n        <div className=\"center-wrapper\">\n          <span className={symbolNames.join(\" \")}>{symbol}</span>\n        </div>\n      )}\n    </td>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/lofi-pomodoro.24a49f67.mp3\";","import React, { useState, useEffect, useContext, useRef } from \"react\";\nimport IntervalTree from \"node-interval-tree\";\nimport dayjs, { Dayjs } from \"dayjs\";\nimport Confetti from 'react-confetti';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal'\nimport ReactJkMusicPlayer from 'react-jinke-music-player';\nimport 'react-jinke-music-player/assets/index.css';\nimport logger from \"./logger\";\n\nimport { Task, History } from \"./HabiticaTypes\";\nimport DailyHistory from \"./DailyHistory\";\n\nimport LOFI_MP3 from './lofi-pomodoro.mp3';\n\nconst audioList1 = [\n  {\n    name: 'lofi',\n    // singer: 'Luis Fonsi',\n    // cover:\n    //   'http://res.cloudinary.com/alick/image/upload/v1502689731/Despacito_uvolhp.jpg',\n    musicSrc: LOFI_MP3,\n    // support async fetch music src. eg.\n    // musicSrc: async () => {\n    //   return await fetch('/api')\n    // },\n  },\n]\n\nexport const DATE_KEY_FORMAT = \"YYYYMMDD\";\n\nconst HABITICA_API_URL = \"https://habitica.com/api/v3\";\nconst CLIENT_KEY = \"0d9428fd-d6fa-45f3-a4db-f130e3ef10ea-HabiticaTracker\";\nconst USER_PATH = \"/user\";\nconst TASKS_PATH = \"/tasks/user\";\nconst TODOS_COMPLETED_PATH = \"/tasks/user?type=completedTodos\";\nconst DEFAULT_NUM_DAYS_TO_SHOW = 7;\n\n/**\n * Tasks completed during Cron time are tasks which were completed the previous\n * day. These are different from tasks which were completed at other times\n * which are assigned to the date on which they were completed. The Cron time\n * is used to guess at which tasks fall into each category. Because the task\n * completion time is not exactly equal to the cron time, this constant is used\n * to create a Cron time buffer to designate all tasks which were completed\n * this amount of time before the Cron time as Cron tasks.\n */\nconst CRON_BUFFER_DURATION_SECONDS = 300;\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height\n  };\n}\n\nfunction getRandomInt(min: number, max: number) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\n}\n\nfunction setRandConfettiNum() {\n  return getRandomInt(2000, 5000)\n}\n\nconst NINTY_MIN = 90 * 60;\n\nfunction fancyTimeFormat(duration : number) {   \n  // Hours, minutes and seconds\n  var hrs = ~~(duration / 3600);\n  var mins = ~~((duration % 3600) / 60);\n  var secs = ~~duration % 60;\n\n  // Output like \"1:01\" or \"4:03:59\" or \"123:03:59\"\n  var ret = \"\";\n\n  if (hrs > 0) {\n      ret += \"\" + hrs + \":\" + (mins < 10 ? \"0\" : \"\");\n  }\n\n  ret += \"\" + mins + \":\" + (secs < 10 ? \"0\" : \"\");\n  ret += \"\" + secs;\n  return ret;\n}\n\nexport const AppContext = React.createContext({\n  showTaskIcons: false,\n  dates: Array<Dayjs>(),\n  cronIntervals: new IntervalTree(),\n});\n\ninterface UserHistoryProps {\n  userId: string;\n  userApiKey: string;\n  setError: (errorMessage: Error) => void;\n}\n\nexport default function UserHistory(props: UserHistoryProps) {\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n  const [showConfetti, setShowConfetti] = useState<boolean>(false);\n  const [numberOfPieces, setNumberOfPieces] = useState<number>(setRandConfettiNum());\n  const [audio, setAudio] = useState({currentTime: 0, play: () => {}});\n\n  // App states\n  const [isLoadingUserData, setLoadingUserData] = useState(true);\n  const [isLoadingTaskData, setLoadingTaskData] = useState(true);\n  const [isLoadingTodoData, setLoadingTodoData] = useState(true);\n\n  // User options\n  const [numDaysToShow, setNumDaysToShow] = useState<number>(\n    DEFAULT_NUM_DAYS_TO_SHOW\n  );\n  const [showTaskIcons, setShowTaskIcons] = useState<boolean>(false);\n\n  // User data\n  const [cronTimes, setCronTimes] = useState<Array<[number, number]>>([]);\n  const [habits, setHabits] = useState<Task[]>([]);\n  const [dailys, setDailys] = useState<Task[]>([]);\n  const [todos, setTodos] = useState<Task[]>([]);\n\n  // Pomodoro\n  const [inPomodoroSession, setInPomodoroSession] = useState(false);\n  const [pomodoroTimer, setPomodoroTimer] = useState(NINTY_MIN);\n  const pomodoroTimerRef = useRef(pomodoroTimer);\n  pomodoroTimerRef.current = pomodoroTimer;\n\n  const [showDialog, setShowDialog] = useState(false);\n  const handleCloseDialog = () => setShowDialog(false);\n  const handleShowDialog = () => setShowDialog(true);\n\n  const { userId, userApiKey } = props;\n\n  const onConfettiComplete = () => {\n    setNumberOfPieces(setRandConfettiNum())\n    setShowConfetti(false)\n  }\n\n  const fetchWithApiKey = (url: string) => {\n    return fetch(url, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-api-user\": userId,\n        \"x-api-key\": userApiKey,\n        \"x-client\": CLIENT_KEY,\n      },\n    });\n  };\n\n  const handleApiError = (res: any) => {\n    if (!res.success) {\n      throw new Error(res.message);\n    }\n    return res;\n  };\n\n  const setError = props.setError;\n\n  const readData = () => fetchWithApiKey(HABITICA_API_URL + TASKS_PATH)\n  .then((res) => res.json())\n  .then(handleApiError)\n  .then(\n    (result) => {\n      setHabits(result.data.filter((task: Task) => task.type === \"habit\"));\n      setDailys(result.data.filter((task: Task) => task.type === \"daily\"));\n      setLoadingTaskData(false);\n      console.log(HABITICA_API_URL + TASKS_PATH, JSON.stringify(result));\n    },\n    (error) => {\n      setError(error);\n    }\n  );\n\n  const scoreTask = (taskId: string) => {\n    return fetch(\n      HABITICA_API_URL + '/tasks/' + taskId + '/score/up',\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"x-api-user\": userId,\n          \"x-api-key\": userApiKey,\n          \"x-client\": CLIENT_KEY,\n        },\n      }\n    ).then((res) => res.json())\n    .then(handleApiError)\n    .then(\n      (result) => {\n        setShowConfetti(true)\n        console.log(HABITICA_API_URL + '/tasks/' + taskId + '/score/up', JSON.stringify(result));\n      },\n      (error) => {\n        setError(error);\n      })\n    .then(readData);\n  }\n\n  const dailyGoal = () => scoreTask('b85dc3ec-7836-4827-aa68-e7e605c1489e')\n\n  const scorePomodoro = () => scoreTask('ec59d7c1-e692-4b17-b2e0-6b6a76aedcc3')\n\n  const reflect = () => scoreTask('13ab931b-b04a-47f0-9555-ad3bc4428dd6')\n\n  const audioOptions = {\n    getAudioInstance: (audio : any) => {\n      setAudio(audio);\n    },\n\n    // audio lists model\n    audioLists: audioList1,\n  \n    // default play index of the audio player  [type `number` default `0`]\n    defaultPlayIndex: 0,\n\n    // Specifies movement boundaries. Accepted values:\n    // - `parent` restricts movement within the node's offsetParent\n    //    (nearest node with position relative or absolute), or\n    // - a selector, restricts movement within the targeted node\n    // - An object with `left, top, right, and bottom` properties.\n    //   These indicate how far in each direction the draggable\n    //   can be moved.\n    // Ref: https://github.com/STRML/react-draggable#draggable-api\n    bounds: 'body',\n\n    defaultPosition: {top:250, left:10},\n  \n    // The Audio Can be deleted  [type `Boolean`, default `true`]\n    remove: false,\n  \n    // audio mode        mini | full          [type `String`  default `mini`]\n    // mode: \"full\",\n  \n    // Whether the audio is played after loading is completed. [type `Boolean` default 'true']\n    autoPlay: false,\n  \n    // Whether you can switch between two modes, full => mini  or mini => full   [type 'Boolean' default 'true']\n    toggleMode: false,\n  \n    // audio cover is show of the \"mini\" mode [type `Boolean` default 'true']\n    showMiniModeCover: false,\n  \n    // audio playing progress is show of the \"mini\"  mode\n    showMiniProcessBar: true,\n  \n    // drag the audio progress bar [type `Boolean` default `true`]\n    seeked: false,\n  \n    // Displays the audio load progress bar.  [type `Boolean` default `true`]\n    showProgressLoadBar: true,\n  \n    // play button display of the audio player panel   [type `Boolean` default `true`]\n    showPlay: false,\n  \n    // reload button display of the audio player panel   [type `Boolean` default `true`]\n    showReload: false,\n  \n    // download button display of the audio player panel   [type `Boolean` default `true`]\n    showDownload: false,\n  \n    // loop button display of the audio player panel   [type `Boolean` default `true`]\n    showPlayMode: false,\n  \n    // theme toggle switch  display of the audio player panel   [type `Boolean` default `true`]\n    showThemeSwitch: false,\n  \n    // Extensible custom content       [type 'Array' default '-' ]\n    extendsContent: null,\n  \n    // playModeText show time [type `Number(ms)` default `600`]\n    playModeShowTime: 600,\n  \n    // Whether to try playing the next audio when the current audio playback fails [type `Boolean` default `true`]\n    loadAudioErrorPlayNext: false,\n  \n    // Auto hide the cover photo if no cover photo is available [type `Boolean` default `false`]\n    autoHiddenCover: true,\n  \n    // Enable responsive player, auto toggle desktop and mobile [type `Boolean` default `true`]\n    responsive: false,\n  \n    // audio play handle\n    // onAudioPlay() {\n    //   console.log('audio playing')\n    // },\n\n    onAudioProgress(audioInfo : any) {\n      // console.log('audio progress', audioInfo)\n      let newTimer = NINTY_MIN - audioInfo.currentTime\n      setPomodoroTimer(newTimer)\n    },\n  \n    // The single song is ended handle\n    onAudioEnded() {\n      finishPomodoro()\n      // console.log('audio ended')\n    }\n  }\n\n  useEffect(() => {\n    if (!(\"Notification\" in window)) {\n      console.log(\"This browser does not support desktop notification\");\n    } else {\n      Notification.requestPermission();\n    }\n  }, []);\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  // Fetch user data to get cron times.\n  useEffect(() => {\n    fetchWithApiKey(HABITICA_API_URL + USER_PATH)\n      .then((res) => res.json())\n      .then(handleApiError)\n      .then(\n        (result) => {\n          setCronTimes(\n            result.data.history.exp.map((history: History) => {\n              const cronTime = dayjs(history.date);\n              return [\n                cronTime.unix() - CRON_BUFFER_DURATION_SECONDS,\n                cronTime.unix() + CRON_BUFFER_DURATION_SECONDS,\n              ];\n            })\n          );\n          setLoadingUserData(false);\n        },\n        (error) => {\n          setError(error);\n        }\n      );\n  }, []); // DO NOT REMOVE the empty dependency array\n\n  // Fetch habit and daily data.\n  useEffect(() => {\n    readData()\n  }, []); // DO NOT REMOVE the empty dependency array\n\n  // Fetch completed todos.\n  useEffect(() => {\n    fetchWithApiKey(HABITICA_API_URL + TODOS_COMPLETED_PATH)\n      .then((res) => res.json())\n      .then(handleApiError)\n      .then(\n        (result) => {\n          setTodos(result.data.filter((task: Task) => task.type === \"todo\"));\n          setLoadingTodoData(false);\n        },\n        (error) => {\n          setError(error);\n        }\n      );\n  }, []); // DO NOT REMOVE the empty dependency array\n\n  const startPomodoro = () => {\n    setInPomodoroSession(true)\n    // pomodoroTimeout()\n    if (audio) {\n      audio.currentTime = 0\n      audio.play();\n    }\n    handleShowDialog()\n  }\n\n  const runPomodoro = () => {\n    let newTimer = pomodoroTimerRef.current - 1\n    setPomodoroTimer(newTimer)\n\n    if (newTimer === 0) {\n      finishPomodoro()\n    } else {\n      pomodoroTimeout()\n    }\n  }\n\n  const pomodoroTimeout = () => setTimeout(runPomodoro, 1000)\n\n  const finishPomodoro = () => {\n    handleCloseDialog()\n    setInPomodoroSession(false)\n    setPomodoroTimer(NINTY_MIN)\n    scorePomodoro()\n    new Notification('pomodoro is finished yo 🎉', {\n      icon: 'https://vwskwong.github.io/assets/Logo/apple-touch-icon.png',\n      image: 'https://c.tenor.com/I4d1QyAghmUAAAAM/hooray-letsgo.gif',\n      requireInteraction: true,\n    })\n  }\n\n  if (isLoadingUserData || isLoadingTaskData || isLoadingTodoData) {\n    return (\n      <div className=\"App\">\n        <p>Loading...</p>\n      </div>\n    );\n  } else {\n    const cronIntervals = new IntervalTree();\n    cronTimes.forEach((range) => {\n      logger.debug(`cron: ${dayjs.unix(range[0])} - ${dayjs.unix(range[1])}`);\n      cronIntervals.insert(range[0], range[1], true);\n    });\n\n    const appContext = {\n      showTaskIcons: showTaskIcons,\n      dates: getDateArray(numDaysToShow),\n      cronIntervals,\n    };\n\n    return (\n      <div className=\"App\">\n        <AppContext.Provider value={appContext}>\n          {/* <AppControls\n            numDaysToShow={numDaysToShow}\n            setNumDaysToShow={setNumDaysToShow}\n            toggleTaskIcons={() => setShowTaskIcons(!showTaskIcons)}\n          /> */}\n          {/* <div className=\"identity\">\n            <span>Ambitious ♦ Mindful ♦ Disciplined</span>\n          </div> */}\n          <DailyHistory data={[...dailys.slice(0, -1), ...habits, ...dailys.slice(-1)]} />\n          {/* <HabitHistory data={habits} /> */}\n          {/* <TodoHistory data={todos} /> */}\n          <div className=\"buttons-container\">\n            {/* <div className=\"button-container\">\n              <Button variant=\"outline-success\" onClick={dailyGoal}>✓ Daily Goal</Button>\n            </div> */}\n            <div className=\"button-container\">\n              <Button variant=\"outline-success\" onClick={inPomodoroSession ? undefined : startPomodoro}>\n                {inPomodoroSession ? fancyTimeFormat(pomodoroTimer) : '🧠 start focus you shithead'}\n              </Button>\n            </div>\n            {/* <div className=\"button-container\">\n              <Button variant=\"outline-success\" onClick={reflect}>✓ Reflect</Button>\n            </div> */}\n          </div>\n          <ReactJkMusicPlayer {...audioOptions} mode=\"mini\" />\n          <Confetti\n            width={windowDimensions.width}\n            height={windowDimensions.height}\n            run={showConfetti}\n            onConfettiComplete={onConfettiComplete}\n            numberOfPieces={numberOfPieces}\n            recycle={false}\n            tweenDuration={50000}\n          />\n          <Modal show={showDialog} centered backdropClassName=\"dialogWrapper\" dialogClassName=\"dialog\">\n            <Modal.Header closeButton>\n              <Modal.Title>lets goo 🚨 {fancyTimeFormat(pomodoroTimer)} 🚨</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <p className=\"dialogText\">\n                ✍️ Draw my line on mediocrity.<br />\n                👁 Visualize: negative + positive<br />\n                💬 Affirm: Who do I want to be?<br />\n                🎯 What do I want to accomplish right now?<br />\n                🧩 Breakdown the task<br/>\n                🫵 Point n Call\n              </p>\n            </Modal.Body>\n            <Modal.Footer>\n              <Button variant=\"secondary\" onClick={handleCloseDialog}>\n                🚨 go brrrr\n              </Button>\n            </Modal.Footer>\n          </Modal>\n        </AppContext.Provider>\n      </div>\n    );\n  }\n}\n\nfunction AppControls(props: {\n  numDaysToShow: number;\n  setNumDaysToShow: (n: number) => void;\n  toggleTaskIcons: () => void;\n}) {\n  const context = useContext(AppContext);\n  const openHabitica = () => {\n    window.open(\"https://habitica.com/\");\n  };\n  const showMore = () => props.setNumDaysToShow(props.numDaysToShow + 7);\n  const showLess = () => props.setNumDaysToShow(props.numDaysToShow - 7);\n  const monthString = getMonthString(context.dates);\n\n  return (\n    <div className=\"app-controls\">\n      <div className=\"date-header\" onClick={openHabitica}>{monthString}</div>\n      {/* <div className=\"date-header\" onClick={openHabitica}>Habitica</div> */}\n      {/* <div>\n        <span role=\"button\" className=\"link\" onClick={showMore}>\n          +1 week\n        </span>\n        {props.numDaysToShow > 7 ? (\n          <span>\n            <span> / </span>\n            <span role=\"button\" className=\"link\" onClick={showLess}>\n              -1 week\n            </span>\n          </span>\n        ) : null}\n      </div> */}\n      {/* <div className=\"date-header\">{monthString}</div> */}\n      {/* <span\n        role=\"button\"\n        className=\"link\"\n        onClick={props.toggleTaskIcons}\n        title=\"Show/Hide task icons\"\n      >\n        {context.showTaskIcons ? \"-\" : \"+\"} Task Icons\n      </span> */}\n    </div>\n  );\n}\n\nfunction getMonthString(dates: Dayjs[]): string {\n  const monthStart = dates[0];\n  const monthEnd = dates[dates.length - 1];\n  if (monthStart.month() === monthEnd.month()) {\n    return monthEnd.format(\"MMMM YYYY\");\n  }\n  let startFormat = monthStart.year() === monthEnd.year() ? \"MMM\" : \"MMM YYYY\";\n  let endFormat = \"MMM YYYY\";\n  return [monthStart.format(startFormat), monthEnd.format(endFormat)].join(\"–\");\n}\n\n/** Get all the dates to show.  */\nfunction getDateArray(numDays: number): Dayjs[] {\n  return Array(numDays)\n    .fill(0)\n    .map((_, i) => i)\n    .reverse()\n    .map((i) => dayjs().subtract(i, \"day\").startOf(\"day\"));\n}\n","import React, { useState, ChangeEvent } from \"react\";\n\nimport \"./App.css\";\nimport UserHistory from \"./UserHistory\";\n\nexport const DATE_KEY_FORMAT = \"YYYYMMDD\";\n\nexport enum AppState {\n  PROMPT_FOR_USER_CREDS,\n  USER_INPUT_ACCEPTED,\n  ERROR,\n}\n\nfunction App() {\n  const [userId, setUserId] = useState<string>(\"9ebcbcde-d6a2-40d6-9ec1-99de1e5e7470\");\n  const [userApiKey, setUserApiKey] = useState<string>(\"82efbb68-ab5b-426a-bcad-da7fdc3273bb\");\n  const [error, setError] = useState<Error>();\n  const [appState, setAppState] = useState<AppState>(\n    AppState.USER_INPUT_ACCEPTED\n  );\n\n  const setAppError = (error: Error) => {\n    setError(error);\n    setAppState(AppState.ERROR);\n  };\n\n  const handleUserIdChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setUserId(event.target.value);\n  };\n\n  const handleUserApiKeyChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setUserApiKey(event.target.value);\n  };\n\n  const handleSubmit = (event: React.MouseEvent) => {\n    event.preventDefault();\n    setAppState(AppState.USER_INPUT_ACCEPTED);\n  };\n\n  if (\n    appState === AppState.PROMPT_FOR_USER_CREDS ||\n    appState === AppState.ERROR\n  ) {\n    return (\n      <div className=\"App\">\n        <h1>Habitica Tracker</h1>\n        {error && <div className=\"error\">Error: {error.message}</div>}\n        <p>\n          This tool displays a history of your Habits, Dailies and Todos in\n          Habitica.\n        </p>\n        <p>\n          Your User ID and API key can be found on the{\" \"}\n          <a\n            href=\"https://habitica.com/user/settings/api\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Settings &gt; API\n          </a>{\" \"}\n          page in Habitica.\n        </p>\n        <form className=\"user-api-form\">\n          <div className=\"label-container\">\n            <div className=\"label\">User ID</div>\n            <input\n              type=\"text\"\n              className=\"user-id\"\n              value={userId}\n              onChange={handleUserIdChange}\n            />\n          </div>\n          <div className=\"label-container\">\n            <span className=\"label\">API Key</span>\n            <input\n              type=\"password\"\n              className=\"api-key\"\n              value={userApiKey}\n              onChange={handleUserApiKeyChange}\n              minLength={36}\n            />\n          </div>\n          <div className=\"submit-wrapper\">\n            <input type=\"submit\" value=\"Fetch My Data\" onClick={handleSubmit} />\n          </div>\n        </form>\n        <h2>Note</h2>\n        <ul>\n          <li>\n            Your user ID and API key will be sent to the Habitica servers and\n            nowhere else.\n          </li>\n          <li>\n            This app does not change your Habitica account data. It only fetches\n            and displays data.\n          </li>\n        </ul>\n      </div>\n    );\n  } else {\n    return (\n      <UserHistory\n        userId={userId}\n        userApiKey={userApiKey}\n        setError={setAppError}\n      />\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <div className=\"app-wrapper\">\n      <App />\n    </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}