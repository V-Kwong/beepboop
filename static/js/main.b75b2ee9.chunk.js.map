{"version":3,"sources":["logger.ts","svg/difficulty-trivial.svg","TaskIcon.tsx","HistoryTableHeader.tsx","DailyHistory.tsx","HabitHistory.tsx","TodoHistory.tsx","UserHistory.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["logger","setLevel","_path","_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgDifficultyTrivial","_ref","svgRef","title","titleId","props","xmlns","width","height","viewBox","ref","id","fillRule","d","ForwardRef","TaskIcon","priority","nextDue","context","useContext","AppContext","classNames","getColorClass","task","join","numStars","Math","ceil","stars","Array","from","x","fill","taskValue","value","toFixed","dayjs","showTaskIcons","Fragment","className","place","effect","formatDate","date","now","diff","format","year","VALUE_THRESHOLDS","COLOR_CLASS","HistoryTableHeader","role","onClick","setShowNoHistory","showNoHistory","dates","map","day","toString","md","require","DailyHistory","useState","data","daily","Daily","historyMap","Map","text","history","debug","delta","taskUpdateTime","cronIntervals","search","unix","oneDayAgo","subtract","has","DATE_KEY_FORMAT","warn","taskDate","set","console","groupEnd","dailyDeltas","get","filter","undefined","dangerouslySetInnerHTML","__html","render","DailyStatus","symbol","push","HabitHistory","habit","Habit","record","JSON","stringify","scoredUp","scoredDown","dailyScores","score","HabitScore","up","down","TodoHistory","startDate","todos","todo","dateCompleted","isAfter","Todo","completionDate","HABITICA_API_URL","React","createContext","IntervalTree","UserHistory","isLoadingUserData","setLoadingUserData","isLoadingTaskData","setLoadingTaskData","isLoadingTodoData","setLoadingTodoData","numDaysToShow","setNumDaysToShow","setShowTaskIcons","cronTimes","setCronTimes","habits","setHabits","dailys","setDailys","setTodos","userId","userApiKey","fetchWithApiKey","url","fetch","method","headers","handleApiError","res","success","Error","message","setError","useEffect","then","json","result","exp","cronTime","error","type","forEach","range","insert","numDays","appContext","_","reverse","startOf","Provider","AppControls","toggleTaskIcons","monthString","monthStart","monthEnd","month","startFormat","endFormat","getMonthString","AppState","App","setUserId","setUserApiKey","USER_INPUT_ACCEPTED","appState","setAppState","PROMPT_FOR_USER_CREDS","ERROR","href","rel","onChange","event","minLength","preventDefault","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.b75b2ee9.chunk.js","sourcesContent":["import logger from 'loglevel';\n\nif (process.env.NODE_ENV === 'development') {\n  logger.setLevel(\"WARN\");\n} else {\n  logger.setLevel(\"ERROR\");\n}\n\nexport default logger;","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgDifficultyTrivial(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M10.667 10.667L16 8l-5.333-2.667L8 0 5.333 5.333 0 8l5.333 2.667L8 16z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDifficultyTrivial);\nexport default __webpack_public_path__ + \"static/media/difficulty-trivial.b863dbce.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useContext } from \"react\";\nimport dayjs, { Dayjs } from \"dayjs\";\n\nimport ReactTooltip from \"react-tooltip\";\nimport { ReactComponent as TrivialIcon } from \"./svg/difficulty-trivial.svg\";\n\nimport \"./TaskIcon.css\";\nimport { Task } from \"./HabiticaTypes\";\nimport { AppContext } from \"./UserHistory\";\n\nconst DATE_FORMAT = \"ddd MMM D\";\nconst DATE_FORMAT_WITH_YEAR = `MMM D YYYY`;\n\nexport function TaskIcon(props: { task: Task }) {\n  const context = useContext(AppContext);\n  const classNames = [\n    \"task-icon-container\",\n    \"center-wrapper\",\n    getColorClass(props.task),\n  ].join(\" \");\n\n  const numStars = getDifficultyLevel(props.task.priority);\n  const stars = Array.from({ length: numStars }, (x, i) => (\n    <TrivialIcon key={i} fill=\"white\" aria-hidden />\n  ));\n  const taskValue = props.task.value.toFixed(1);\n\n  let nextDue: Dayjs | undefined;\n  if (props.task.nextDue) {\n    nextDue = dayjs(props.task.nextDue[0]);\n  }\n  return context.showTaskIcons ? (\n    <React.Fragment>\n      <div data-tip data-for={props.task.id} className={classNames}>\n        {stars}\n      </div>\n      <ReactTooltip id={props.task.id} place=\"left\" effect=\"solid\">\n        {nextDue ? (\n          <div>\n            <b>Next due:</b> {formatDate(nextDue)}\n          </div>\n        ) : null}\n        <div>\n          <b>Task value:</b> {taskValue}\n        </div>\n      </ReactTooltip>\n    </React.Fragment>\n  ) : null;\n}\n\nfunction formatDate(date: Dayjs): string {\n  const now = dayjs();\n  if (date.diff(now, \"day\") < 1) {\n    return \"tomorrow\";\n  } else if (date.diff(now, \"day\") < 6) {\n    return date.format(\"dddd\");\n  } else if (date.year === dayjs().year) {\n    return date.format(DATE_FORMAT);\n  } else {\n    return date.format(DATE_FORMAT_WITH_YEAR);\n  }\n}\n\nfunction getDifficultyLevel(priority: number) {\n  return Math.ceil(priority / 0.5);\n}\n\nconst VALUE_THRESHOLDS = [-16, -9, -1, 1, 6, 12];\nconst COLOR_CLASS = [\"worst\", \"worse\", \"bad\", \"neutral\", \"good\", \"better\"];\n\nfunction getColorClass(task: Task): string {\n  for (let i = 0; i < VALUE_THRESHOLDS.length; i++) {\n    if (task.value < VALUE_THRESHOLDS[i]) {\n      return COLOR_CLASS[i];\n    }\n  }\n  return \"best\";\n}\n","import React, { useContext } from \"react\";\nimport { UnfoldIcon, FoldIcon } from \"@primer/octicons-react\";\n\nimport { AppContext } from \"./UserHistory\";\n\nexport default function HistoryTableHeader(props: {\n  title: string;\n  setShowNoHistory: (val: boolean) => void;\n  showNoHistory: boolean;\n}) {\n  const context = useContext(AppContext);\n  return (\n    <thead>\n      <tr>\n        <th>\n          <div className=\"section-header\">\n            <div className=\"section-header-title\">\n              <h2>{props.title}</h2>\n              <div\n                role=\"button\"\n                className=\"show-no-history clickable\"\n                title=\"Show/Hide tasks with no data\"\n                onClick={() => props.setShowNoHistory(!props.showNoHistory)}\n              >\n                {props.showNoHistory ? (\n                  <FoldIcon aria-hidden=\"true\" />\n                ) : (\n                  <UnfoldIcon aria-hidden=\"true\" />\n                )}\n              </div>\n            </div>\n          </div>\n        </th>\n        {context.dates.map((day) => (\n          <th key={day.toString()}>\n            <div className=\"date date-heading\">\n              <span>{day.format(\"ddd\")}</span>\n              <span>{day.format(\"DD\")}</span>\n            </div>\n          </th>\n        ))}\n      </tr>\n    </thead>\n  );\n}\n","import React, { useContext, useState } from \"react\";\nimport dayjs from \"dayjs\";\n\nimport { DATE_KEY_FORMAT } from \"./App\";\nimport { Task } from \"./HabiticaTypes\";\nimport { AppContext } from \"./UserHistory\";\nimport { TaskIcon } from \"./TaskIcon\";\nimport HistoryTableHeader from \"./HistoryTableHeader\";\nimport logger from \"./logger\";\n\nvar md = require(\"habitica-markdown\");\n\nexport interface DailyHistoryProps {\n  data: Task[];\n}\n\nexport default function DailyHistory(props: DailyHistoryProps) {\n  const [showNoHistory, setShowNoHistory] = useState(false);\n\n  return (\n    <section className=\"dailys\">\n      <table>\n        <HistoryTableHeader\n          title=\"Dailies\"\n          setShowNoHistory={setShowNoHistory}\n          showNoHistory={showNoHistory}\n        />\n        <tbody>\n          {props.data.map((daily) => (\n            <Daily key={daily.id} showNoHistory={showNoHistory} daily={daily} />\n          ))}\n        </tbody>\n      </table>\n      <div\n        className=\"link show-no-history\"\n        onClick={() => setShowNoHistory(!showNoHistory)}\n      ></div>\n    </section>\n  );\n}\n\nexport function Daily(props: { daily: Task; showNoHistory: boolean }) {\n  const context = useContext(AppContext);\n  const historyMap = new Map<string, number>();\n\n  const { text, history } = props.daily;\n\n  logger.debug(text);\n  for (let i = 1; i < history.length; i++) {\n    const delta = history[i].value - history[i - 1].value;\n    let taskUpdateTime = dayjs(history[i].date);\n    logger.debug(\n      taskUpdateTime.format(\"YYYY-MM-DD HH:mm:ss\") + \": \" + history[i].value\n    );\n    // Only consider times when the task value changes (or the first value).\n    if (delta !== 0) {\n      // This task update was done via cron so the task was actually done the\n      // day before.\n      if (\n        context.cronIntervals.search(\n          taskUpdateTime.unix(),\n          taskUpdateTime.unix()\n        ).length > 0\n      ) {\n        // Daily could have been completed twice in the cron time so if a\n        // completion already exists for yesterday then this completion must be\n        // for today.\n        const oneDayAgo = taskUpdateTime.subtract(1, \"day\");\n        if (!historyMap.has(oneDayAgo.format(DATE_KEY_FORMAT))) {\n          taskUpdateTime = oneDayAgo;\n        } else {\n          if (historyMap.has(taskUpdateTime.format(DATE_KEY_FORMAT))) {\n            logger.warn(\n              `Too many completions for ${text} on ${taskUpdateTime}`\n            );\n          }\n        }\n      }\n      const taskDate = taskUpdateTime.format(DATE_KEY_FORMAT);\n      historyMap.set(taskDate, delta);\n    }\n  }\n  console.groupEnd();\n\n  const dailyDeltas = context.dates\n    .map((day) => day.format(DATE_KEY_FORMAT))\n    .map((day) => ({\n      day,\n      delta: historyMap.get(day)\n    }));\n\n  if (\n    dailyDeltas.filter(({delta}) => delta !== undefined).length === 0 &&\n    !props.showNoHistory\n  ) {\n    // Don't render the component if showNoHistory is off.\n    return null;\n  }\n\n  return (\n    <tr>\n      <td className=\"task-name-row\">\n        <TaskIcon task={props.daily} />\n        <span\n          className=\"task-name\"\n          dangerouslySetInnerHTML={{ __html: md.render(text) }}\n        />\n      </td>\n      {dailyDeltas.map(({day, delta}) => (\n        <DailyStatus key={day} delta={delta!} />\n      ))}\n    </tr>\n  );\n}\n\nfunction DailyStatus(props: { delta: number | undefined }) {\n  let classNames = [\"daily-cell\"];\n  let symbol;\n  if (!props.delta || props.delta === 0) {\n    classNames.push(\"pass\");\n    symbol = \"\\xa0\";\n  } else if (props.delta > 0) {\n    classNames.push(\"success\");\n    symbol = \"✓\";\n  } else {\n    classNames.push(\"fail\");\n    symbol = \"✖\";\n  }\n  return (\n    <td className={classNames.join(\" \")}>\n      {symbol && (\n        <div className=\"center-wrapper\">\n          <span className=\"symbol\">{symbol}</span>\n        </div>\n      )}\n    </td>\n  );\n}\n","import React, { useContext, useState } from \"react\";\nimport dayjs from \"dayjs\";\n\nimport { Task } from \"./HabiticaTypes\";\nimport { DATE_KEY_FORMAT } from \"./App\";\nimport { AppContext } from \"./UserHistory\";\nimport { TaskIcon } from \"./TaskIcon\";\nimport HistoryTableHeader from \"./HistoryTableHeader\";\nimport logger from \"./logger\";\n\nvar md = require(\"habitica-markdown\");\n\nexport interface HabitHistoryProps {\n  data: Task[];\n}\n\nexport default function HabitHistory(props: HabitHistoryProps) {\n  const [showNoHistory, setShowNoHistory] = useState(false);\n\n  return (\n    <section className=\"habits\">\n      <table>\n        <HistoryTableHeader\n          title=\"Habits\"\n          setShowNoHistory={setShowNoHistory}\n          showNoHistory={showNoHistory}\n        />\n        <tbody>\n          {props.data.map((habit) => (\n            <Habit key={habit.id} showNoHistory={showNoHistory} habit={habit} />\n          ))}\n        </tbody>\n      </table>\n    </section>\n  );\n}\n\nexport function Habit(props: { habit: Task; showNoHistory: boolean }) {\n  const context = useContext(AppContext);\n  const historyMap = new Map<string, [number, number]>();\n  const { text, history } = props.habit;\n\n  logger.debug(text);\n  for (let record of history) {\n    let taskDate = dayjs(record.date).format(DATE_KEY_FORMAT);\n    logger.debug(JSON.stringify(record));\n    if (record.scoredUp !== undefined && record.scoredDown !== undefined) {\n      historyMap.set(taskDate, [record.scoredUp, record.scoredDown]);\n    }\n  }\n\n  const dailyScores = context.dates\n    .map((day) => day.format(DATE_KEY_FORMAT))\n    .map((day) => ({\n      day,\n      score: historyMap.get(day)\n    }));\n\n  if (\n    dailyScores.filter(({score}) => score !== undefined).length === 0 &&\n    !props.showNoHistory\n  ) {\n    // Don't render the component if showNoHistory is off.\n    return null;\n  }\n\n  return (\n    <tr>\n      <td className=\"task-name-row\">\n        <TaskIcon task={props.habit} />\n        <span\n          className=\"task-name\"\n          dangerouslySetInnerHTML={{ __html: md.render(text) }}\n        />\n      </td>\n      {dailyScores.map(({day, score}) => {\n        if (score) {\n          return <HabitScore key={day} up={score[0]} down={score[1]} />;\n        } else {\n          return <td key={day} className=\"habit-cell\">&nbsp;</td>;\n        }\n      })}\n    </tr>\n  );\n}\n\nfunction HabitScore(props: { up: number; down: number }) {\n  return (\n    <td className=\"habit-cell\">\n      <div className=\"habit-score-container\">\n        {props.up > 0 && (\n          <div className=\"success center-wrapper\">\n            <span>+{props.up}</span>\n          </div>\n        )}\n        {props.down > 0 && (\n          <div className=\"fail center-wrapper\">\n            <span>-{props.down}</span>\n          </div>\n        )}\n      </div>\n    </td>\n  );\n}\n","import React, { useContext } from \"react\";\nimport dayjs from \"dayjs\";\n\nimport \"./TodoHistory.css\";\nimport { Task } from \"./HabiticaTypes\";\nimport { AppContext } from \"./UserHistory\";\nimport { TaskIcon } from \"./TaskIcon\";\n\nvar md = require(\"habitica-markdown\");\n\nconst TODO_FORMAT = \"MMM D\";\n\nexport default function TodoHistory(props: { data: Task[] }) {\n  const context = useContext(AppContext);\n  const startDate = context.dates[0];\n  const todos = props.data.filter((todo) =>\n    dayjs(todo!.dateCompleted).isAfter(startDate)\n  );\n\n  return (\n    <section className=\"todos\">\n      <h2>Completed Todos</h2>\n      <ul>\n        {todos.map((todo) => (\n          <Todo key={todo.id} todo={todo} />\n        ))}\n      </ul>\n    </section>\n  );\n}\n\nfunction Todo(props: { todo: Task }) {\n  const completionDate = dayjs(props.todo!.dateCompleted).format(TODO_FORMAT);\n  return (\n    <li className=\"todo-row\">\n      <TaskIcon task={props.todo} />\n      <span className=\"todo-date date\">{completionDate}</span>\n      <div\n        className=\"task-name\"\n        dangerouslySetInnerHTML={{ __html: md.render(props.todo.text) }}\n      />\n    </li>\n  );\n}\n","import React, { useState, useEffect, useContext } from \"react\";\nimport IntervalTree from \"node-interval-tree\";\nimport dayjs, { Dayjs } from \"dayjs\";\nimport logger from \"./logger\";\n\nimport { Task, History } from \"./HabiticaTypes\";\nimport DailyHistory from \"./DailyHistory\";\nimport HabitHistory from \"./HabitHistory\";\nimport TodoHistory from \"./TodoHistory\";\n\nexport const DATE_KEY_FORMAT = \"YYYYMMDD\";\n\nconst HABITICA_API_URL = \"https://habitica.com/api/v3\";\nconst CLIENT_KEY = \"0d9428fd-d6fa-45f3-a4db-f130e3ef10ea-HabiticaTracker\";\nconst USER_PATH = \"/user\";\nconst TASKS_PATH = \"/tasks/user\";\nconst TODOS_COMPLETED_PATH = \"/tasks/user?type=completedTodos\";\nconst DEFAULT_NUM_DAYS_TO_SHOW = 7;\n\n/**\n * Tasks completed during Cron time are tasks which were completed the previous\n * day. These are different from tasks which were completed at other times\n * which are assigned to the date on which they were completed. The Cron time\n * is used to guess at which tasks fall into each category. Because the task\n * completion time is not exactly equal to the cron time, this constant is used\n * to create a Cron time buffer to designate all tasks which were completed\n * this amount of time before the Cron time as Cron tasks.\n */\nconst CRON_BUFFER_DURATION_SECONDS = 300;\n\nexport const AppContext = React.createContext({\n  showTaskIcons: true,\n  dates: Array<Dayjs>(),\n  cronIntervals: new IntervalTree(),\n});\n\ninterface UserHistoryProps {\n  userId: string;\n  userApiKey: string;\n  setError: (errorMessage: Error) => void;\n}\n\nexport default function UserHistory(props: UserHistoryProps) {\n  // App states\n  const [isLoadingUserData, setLoadingUserData] = useState(true);\n  const [isLoadingTaskData, setLoadingTaskData] = useState(true);\n  const [isLoadingTodoData, setLoadingTodoData] = useState(true);\n\n  // User options\n  const [numDaysToShow, setNumDaysToShow] = useState<number>(\n    DEFAULT_NUM_DAYS_TO_SHOW\n  );\n  const [showTaskIcons, setShowTaskIcons] = useState<boolean>(true);\n\n  // User data\n  const [cronTimes, setCronTimes] = useState<Array<[number, number]>>([]);\n  const [habits, setHabits] = useState<Task[]>([]);\n  const [dailys, setDailys] = useState<Task[]>([]);\n  const [todos, setTodos] = useState<Task[]>([]);\n\n  const { userId, userApiKey } = props;\n  const fetchWithApiKey = (url: string) => {\n    return fetch(url, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-api-user\": userId,\n        \"x-api-key\": userApiKey,\n        \"x-client\": CLIENT_KEY,\n      },\n    });\n  };\n\n  const handleApiError = (res: any) => {\n    if (!res.success) {\n      throw new Error(res.message);\n    }\n    return res;\n  };\n\n  const setError = props.setError;\n\n  // Fetch user data to get cron times.\n  useEffect(() => {\n    fetchWithApiKey(HABITICA_API_URL + USER_PATH)\n      .then((res) => res.json())\n      .then(handleApiError)\n      .then(\n        (result) => {\n          setCronTimes(\n            result.data.history.exp.map((history: History) => {\n              const cronTime = dayjs(history.date);\n              return [\n                cronTime.unix() - CRON_BUFFER_DURATION_SECONDS,\n                cronTime.unix() + CRON_BUFFER_DURATION_SECONDS,\n              ];\n            })\n          );\n          setLoadingUserData(false);\n        },\n        (error) => {\n          setError(error);\n        }\n      );\n  }, []); // DO NOT REMOVE the empty dependency array\n\n  // Fetch habit and daily data.\n  useEffect(() => {\n    fetchWithApiKey(HABITICA_API_URL + TASKS_PATH)\n      .then((res) => res.json())\n      .then(handleApiError)\n      .then(\n        (result) => {\n          setHabits(result.data.filter((task: Task) => task.type === \"habit\"));\n          setDailys(result.data.filter((task: Task) => task.type === \"daily\"));\n          setLoadingTaskData(false);\n        },\n        (error) => {\n          setError(error);\n        }\n      );\n  }, []); // DO NOT REMOVE the empty dependency array\n\n  // Fetch completed todos.\n  useEffect(() => {\n    fetchWithApiKey(HABITICA_API_URL + TODOS_COMPLETED_PATH)\n      .then((res) => res.json())\n      .then(handleApiError)\n      .then(\n        (result) => {\n          setTodos(result.data.filter((task: Task) => task.type === \"todo\"));\n          setLoadingTodoData(false);\n        },\n        (error) => {\n          setError(error);\n        }\n      );\n  }, []); // DO NOT REMOVE the empty dependency array\n\n  if (isLoadingUserData || isLoadingTaskData || isLoadingTodoData) {\n    return (\n      <div className=\"App\">\n        <p>Loading...</p>\n      </div>\n    );\n  } else {\n    const cronIntervals = new IntervalTree();\n    cronTimes.forEach((range) => {\n      logger.debug(`cron: ${dayjs.unix(range[0])} - ${dayjs.unix(range[1])}`);\n      cronIntervals.insert(range[0], range[1], true);\n    });\n\n    const appContext = {\n      showTaskIcons: showTaskIcons,\n      dates: getDateArray(numDaysToShow),\n      cronIntervals,\n    };\n\n    return (\n      <div className=\"App\">\n        <AppContext.Provider value={appContext}>\n          <AppControls\n            numDaysToShow={numDaysToShow}\n            setNumDaysToShow={setNumDaysToShow}\n            toggleTaskIcons={() => setShowTaskIcons(!showTaskIcons)}\n          />\n          <HabitHistory data={habits} />\n          <DailyHistory data={dailys} />\n          <TodoHistory data={todos} />\n        </AppContext.Provider>\n      </div>\n    );\n  }\n}\n\nfunction AppControls(props: {\n  numDaysToShow: number;\n  setNumDaysToShow: (n: number) => void;\n  toggleTaskIcons: () => void;\n}) {\n  const context = useContext(AppContext);\n  const showMore = () => props.setNumDaysToShow(props.numDaysToShow + 7);\n  const showLess = () => props.setNumDaysToShow(props.numDaysToShow - 7);\n  const monthString = getMonthString(context.dates);\n\n  return (\n    <div className=\"app-controls\">\n      <div>\n        <span role=\"button\" className=\"link\" onClick={showMore}>\n          +1 week\n        </span>\n        {props.numDaysToShow > 7 ? (\n          <span>\n            <span> / </span>\n            <span role=\"button\" className=\"link\" onClick={showLess}>\n              -1 week\n            </span>\n          </span>\n        ) : null}\n      </div>\n      <div className=\"date-header\">{monthString}</div>\n      <span\n        role=\"button\"\n        className=\"link\"\n        onClick={props.toggleTaskIcons}\n        title=\"Show/Hide task icons\"\n      >\n        {context.showTaskIcons ? \"-\" : \"+\"} Task Icons\n      </span>\n    </div>\n  );\n}\n\nfunction getMonthString(dates: Dayjs[]): string {\n  const monthStart = dates[0];\n  const monthEnd = dates[dates.length - 1];\n  if (monthStart.month() === monthEnd.month()) {\n    return monthEnd.format(\"MMMM YYYY\");\n  }\n  let startFormat = monthStart.year() === monthEnd.year() ? \"MMM\" : \"MMM YYYY\";\n  let endFormat = \"MMM YYYY\";\n  return [monthStart.format(startFormat), monthEnd.format(endFormat)].join(\"–\");\n}\n\n/** Get all the dates to show.  */\nfunction getDateArray(numDays: number): Dayjs[] {\n  return Array(numDays)\n    .fill(0)\n    .map((_, i) => i + 1)\n    .reverse()\n    .map((i) => dayjs().subtract(i, \"day\").startOf(\"day\"));\n}\n","import React, { useState, ChangeEvent } from \"react\";\n\nimport \"./App.css\";\nimport UserHistory from \"./UserHistory\";\n\nexport const DATE_KEY_FORMAT = \"YYYYMMDD\";\n\nexport enum AppState {\n  PROMPT_FOR_USER_CREDS,\n  USER_INPUT_ACCEPTED,\n  ERROR,\n}\n\nfunction App() {\n  const [userId, setUserId] = useState<string>(\"9ebcbcde-d6a2-40d6-9ec1-99de1e5e7470\");\n  const [userApiKey, setUserApiKey] = useState<string>(\"82efbb68-ab5b-426a-bcad-da7fdc3273bb\");\n  const [error, setError] = useState<Error>();\n  const [appState, setAppState] = useState<AppState>(\n    AppState.USER_INPUT_ACCEPTED\n  );\n\n  const setAppError = (error: Error) => {\n    setError(error);\n    setAppState(AppState.ERROR);\n  };\n\n  const handleUserIdChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setUserId(event.target.value);\n  };\n\n  const handleUserApiKeyChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setUserApiKey(event.target.value);\n  };\n\n  const handleSubmit = (event: React.MouseEvent) => {\n    event.preventDefault();\n    setAppState(AppState.USER_INPUT_ACCEPTED);\n  };\n\n  if (\n    appState === AppState.PROMPT_FOR_USER_CREDS ||\n    appState === AppState.ERROR\n  ) {\n    return (\n      <div className=\"App\">\n        <h1>Habitica Tracker</h1>\n        {error && <div className=\"error\">Error: {error.message}</div>}\n        <p>\n          This tool displays a history of your Habits, Dailies and Todos in\n          Habitica.\n        </p>\n        <p>\n          Your User ID and API key can be found on the{\" \"}\n          <a\n            href=\"https://habitica.com/user/settings/api\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Settings &gt; API\n          </a>{\" \"}\n          page in Habitica.\n        </p>\n        <form className=\"user-api-form\">\n          <div className=\"label-container\">\n            <div className=\"label\">User ID</div>\n            <input\n              type=\"text\"\n              className=\"user-id\"\n              value={userId}\n              onChange={handleUserIdChange}\n            />\n          </div>\n          <div className=\"label-container\">\n            <span className=\"label\">API Key</span>\n            <input\n              type=\"password\"\n              className=\"api-key\"\n              value={userApiKey}\n              onChange={handleUserApiKeyChange}\n              minLength={36}\n            />\n          </div>\n          <div className=\"submit-wrapper\">\n            <input type=\"submit\" value=\"Fetch My Data\" onClick={handleSubmit} />\n          </div>\n        </form>\n        <h2>Note</h2>\n        <ul>\n          <li>\n            Your user ID and API key will be sent to the Habitica servers and\n            nowhere else.\n          </li>\n          <li>\n            This app does not change your Habitica account data. It only fetches\n            and displays data.\n          </li>\n        </ul>\n      </div>\n    );\n  } else {\n    return (\n      <UserHistory\n        userId={userId}\n        userApiKey={userApiKey}\n        setError={setAppError}\n      />\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <div className=\"app-wrapper\">\n      <App />\n    </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}